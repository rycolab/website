@inproceedings{amini+al.acl23,
 abstract = {We introduce a novel dependency parser, the hexatagger, that constructs dependency trees by tagging the words in a sentence with elements from a finite set of possible tags. In contrast to many approaches to dependency parsing, our approach is fully parallelizable at training time, i.e., the structure-building actions needed to build a dependency parse can be predicted in parallel to each other. Additionally, exact decoding is linear in time and space complexity. Furthermore, we derive a probabilistic dependency parser that predicts hexatags using no more than a linear model with features from a pretrained language model, i.e., we forsake a bespoke architecture explicitly designed for the task. Despite the generality and simplicity of our approach, we achieve state-of-the-art performance of 96.4 LAS and 97.4 UAS on the Penn Treebank test set. Additionally, our parser’s linear time complexity and parallelism significantly improve computational efficiency, with a roughly 10-times speed-up over previous state-of-the-art models during decoding.},
 address = {Toronto, Canada},
 arxiv = {https://arxiv.org/abs/2306.05477},
 author = {Amini$^*$, Afra and 
Liu$^*$, Tianyu and 
Cotterell, Ryan},
 booktitle = {Proceedings of the 61th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers)},
 code = {https://github.com/rycolab/parsing-as-tagging},
 month = {July},
 pages = {1453–1464},
 publisher = {Association for Computational Linguistics},
 slides = {https://docs.google.com/presentation/d/14_cAjmZIyXEVrZNbM3sk0ee5qHmrh5C3AKu8wqFCY3Q/edit?usp=sharing},
 title = {Hexatagging: Projective Dependency Parsing as Tagging},
 url = {https://arxiv.org/abs/2306.05477},
 venue = {ACL},
 volume = {2},
 year = {2023}
}

