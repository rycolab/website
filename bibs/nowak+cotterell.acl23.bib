@inproceedings{nowak+cotterell.acl23, 
  title = {A Fast Algorithm for Computing Prefix Probabilities},
  venue = {ACL},
  year = {2023},
  slides = {https://docs.google.com/presentation/d/1lVU-8c4pWz3o9KsgMAWV2MiW9UJt7NO6lp8QvWHQ4oI/edit?usp=sharing},
  video = {https://drive.google.com/file/d/1A9Ug9gF03QMCJeUacI9Pkj7sLlfBn8cj/view?usp=sharing},
  code = {https://github.com/rycolab/prefix-parsing},
  arXiv = {https://arxiv.org/abs/2306.02303},
  author = {Nowak, Franz and 
	Cotterell, Ryan},
  booktitle = {Proceedings of the 61th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers)},
  month = {July},
  publisher = {Association for Computational Linguistics},
  address = {Toronto, Canada},
  volume = {2},
  pages = {57–69},
  abstract = {Multiple algorithms are known for efficiently calculating the prefix probability of a string under a probabilistic context-free grammar (PCFG). Good algorithms for the problem have a runtime cubic in the length of the input string. However, some proposed algorithms are suboptimal with respect to the size of the grammar.This paper proposes a new speed-up of Jelinek and Lafferty’s (1991) algorithm, which runs in O(n3|N|3 + |N|4), where n is the input length and |N| is the number of non-terminals in the grammar. In contrast, our speed-up runs in O(n2|N|3 + n3|N|2).},
  url = {https://arxiv.org/abs/2306.02303},
}
